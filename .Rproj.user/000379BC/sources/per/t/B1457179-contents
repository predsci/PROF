# C functions

# define determenistic and stochastic Euler time steps

sir.ode <- Csnippet("
  DS = -Beta*S*I/N;
  DI = Beta*S*I/N-gamma*I;
  DR = (1-pH)*gamma*I;
  DH1 = pH*gamma*I - mu_H1H2*H1;
  DH2 = mu_H1H2 * H1;
  DIc = Beta*S*I/N;
  DIh = mu_H1H2*H1;
")

sir.step <- "
  double P;
  P = S + I + H1 + H2 + R;
  double t1 = rbinom(S, 1-exp(-Beta*I/P*dt));
  double t2 = rbinom(I, 1-exp(-gamma*dt));
  double t3 = rbinom(H1, 1-exp(-mu_H1H2*dt));

  S +=-t1;
  I += t1 - t2;
  R  += round((1.-pH) * t2);
  H1 += round(pH * t2) - t3;
  H2 += t3;

  Ic += t1;
  Ih += t3;
"

seir.ode <- Csnippet("
  DS = -Beta*S*I/N;
  DE = Beta*S*I/N - mu_EI*E;
  DI = mu_EI*E-gamma*I;
  DR = (1-pH)*gamma*I;
  DH1 = pH*gamma*I - mu_H1H2*H1;
  DH2 = mu_H1H2 * H1;
  DIc = mu_EI*E;
  DIh = mu_H1H2*H1;")

td.seir.ode <- Csnippet("
  double beta_cur;

  beta_cur = Beta1 + Beta2;
  beta_cur = beta_cur + (Beta2-Beta1) * tanh((time-tcng1)/wl);
  beta_cur = beta_cur * 0.5;

  DS = -beta_cur*S*I/N;
  DE = beta_cur*S*I/N - mu_EI*E;
  DI = mu_EI*E-gamma*I;
  DR = (1-pH)*gamma*I;
  DH1 = pH*gamma*I - mu_H1H2*H1;
  DH2 = mu_H1H2 * H1;
  DIc = mu_EI*E;
  DIh = mu_H1H2*H1;
  Dtime = 1;")


seir.step <- "
  double P;
  P = S + E + I + H1 + H2 + R;
  double t1 = rbinom(S, 1-exp(-Beta*I/P*dt));
  double t2 = rbinom(E, 1-exp(-mu_EI*dt));
  double t3 = rbinom(I, 1-exp(-gamma*dt));
  double t4 = rbinom(H1, 1-exp(-mu_H1H2*dt));

  S +=-t1;
  E +=t1 - t2;
  I +=t2 - t3;
  R  += round((1.-pH) * t3);
  H1 += round(pH * t3) - t4;
  H2 += t4;

  Ic += t2;
  Ih += t4;
"

td.seir.step <- "
  double P;
  double beta_cur;
  P = S + E + I + H1 + H2 + R;

  beta_cur = Beta1 + Beta2;
  beta_cur = beta_cur + (Beta2-Beta1) * tanh((time-tcng1)/wl);
  beta_cur = beta_cur * 0.5;

  double t1 = rbinom(S, 1-exp(-beta_cur*I/P*dt));
  double t2 = rbinom(E, 1-exp(-mu_EI*dt));
  double t3 = rbinom(I, 1-exp(-gamma*dt));
  double t4 = rbinom(H1, 1-exp(-mu_H1H2*dt));

  S +=-t1;
  E +=t1 - t2;
  I +=t2 - t3;
  R  += round((1.-pH) * t3);
  H1 += round(pH * t3) - t4;
  H2 += t4;

  Ic += t2;
  Ih += t4;
  time += dt;
"

# define initial conditions

init <- Csnippet("
  S = round(S_0);
  I = round(I_0);
  R = round(R_0);
  H1 = 0;
  H2 = 0;
  Ic = 0;
  Ih = 0;
  ")

init.seir <- Csnippet("
  S = round(S_0);
  E = round(E_0);
  I = round(I_0);
  R = round(R_0);
  H1 = 0;
  H2 = 0;
  Ic = 0;
  Ih = 0;
  ")

td.init.seir <- Csnippet("
  S = round(S_0);
  E = round(E_0);
  I = round(I_0);
  R = round(R_0);
  H1 = 0;
  H2 = 0;
  Ic = 0;
  Ih = 0;
  time = 0;
  ")

# rho is the reporting fraction

dmeas <- Csnippet("
  lik = dpois(cases,rho*Ih+1e-6+baseline,give_log);
")

rmeas <- Csnippet("
  cases = rpois(rho*Ih+1e-6+baseline);
")


toEst <- Csnippet("
 TI_0  = log(I_0);
 TBeta = log(Beta);
 Tmu_IH = log(mu_IH);
 Trho = logit(rho);
 TpH  = logit(pH);
 Tbaseline = log(baseline);
")

fromEst <- Csnippet("
 TI_0  = exp(I_0)
 TBeta = exp(Beta);
 Tmu_IH = exp(mu_IH);
 Trho = expit(rho);
 TpH  = expit(pH);
 Tbaseline = exp(baseline);
")



