{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"PROF Welcome to the documentation site for the PROF package. PROF is an R package (with Fortran code) for fitting and forecasting infectious disease incidence. The package ingests publicly-available confirmed hospital admission data, fits mechanistic models to the data, and provides short-term probabilistic forecasts. Currently, the package supports fitting and forecasting the individual and combined burden of influenza and COVID-19 at the state level. S[I]2HR and SE[I]2HR models are used to fit the two pathogens and both models use a flexible, time-dependent transmission term. Once the User selects a state, and either one or both viruses, the PROF fitting procedure iteratively determines the joint posterior distribution of model parameters. The joint posterior distribution is then used with the model to generate location-specific probabilistic forecasts of the near-term number of hospital admissions. If both viruses are chosen, this procedure is done twice and the total hospital burden forecast is estimated by combining the trajectory profiles of each disease in multiple ways, including random, ordered, and semi-ordered. Data PROF provides full support for downloading the most up-to-date daily confirmed hospital admission data for COVID-19 and influenza. The data set is provided by the U.S. Department of Health & Human Services, is updated weekly on Friday, and is called: \"COVID-19 Reported Patient Impact and Hospital Capacity by State (RAW)\". For more on the data set, see here . Compartmental Models PROF uses compartmental models with a flexible, time-dependent transmission term to fit daily hospitalization data. For both COVID-19 and influenza, the models include a hospitalization compartment which is split into two sub-compartments. This split ensures that the model preserves the correct generation time (T g ) and that the ratio between cumulative recovered and hospitalized individuals is determined by the infection-hospitalization-ratio (p H ). For influenza, individuals begin in the susceptible compartment. If exposed, they transition (\u03b2(t)) to the infectious compartment where there is a probability of hospitalization or recovery (p H /1-p H ) Individuals progress (1/\u03bc) from the first hospitalization compartment (H 1 ) to the second (H 2 ), and the number entering this compartment is recorded as daily incidence (and optimized, see below). A similar model is used for COVID-19 with the only difference being the addition of the Exposed (but not yet infectious) compartment. While we recommend utilizing the SIRH model for influenza and SEIRH for COVID-19, PROF is flexible and supports the fitting of either model to either pathogen. Time-Dependent Force of Infection We use a smoothly varying two-value functional form to describe the time-dependent reproduction number: R(t) = \u03b2(t)\u03b3, where \u03b2(t) is the time-dependent transmission rate is \u03b3 is the total recovery rate. $$R(t)=\\frac{1}{2}\\left( R_{0} + R_{1} + (R_{1}-R_{0})tanh\\left( \\frac{t-t_{0}}{L} \\right) \\right)$$ The above equation produces a smooth curve where at roughly time t 0 the value of R(t) transitions from R 0 to R 1 with an approximate transition time of ~2L days. Methodology - Fitting, Forecasting, and Combined Burden PROF fits each pathogen independently and sequentially. For each pathogen, we determine the joint posterior distribution of model parameters by fitting the daily confirmed hospital admission time series using an adaptive-step-size MCMC procedure. Only parameters that govern the time variation of R(t) and the probability of hospitalization are optimized and all other parameters are taken from the literature. By default, a fast Fortran code is used for the MCMC procedure (in the future, we hope to be able to offer a second, slower-but-faster-than-R, option that does not require a Fortran compiler). Once the fitting of one pathogen is completed, PROF proceeds to fit the second pathogen. The posterior distribution of each fit can be used to (1) Create a probabilistic plot of the fit, (2) Create a probabilistic forecast (and plot thereof) for each pathogen. The final step for PROF is providing an estimate for the forecast of the combined burden. Currently, the combined burden is estimated in two ways (1) By summing the sorted trajectories of each pathogen (implying a perfect correlation between the errors of the two forecasts), or (2) By randomly summing the trajectories (implying no correlation between the errors of the two forecasts). In the near future, we plan to offer a third alternative which is based on an error correlation procedure we are working on.","title":"Home"},{"location":"#prof","text":"Welcome to the documentation site for the PROF package. PROF is an R package (with Fortran code) for fitting and forecasting infectious disease incidence. The package ingests publicly-available confirmed hospital admission data, fits mechanistic models to the data, and provides short-term probabilistic forecasts. Currently, the package supports fitting and forecasting the individual and combined burden of influenza and COVID-19 at the state level. S[I]2HR and SE[I]2HR models are used to fit the two pathogens and both models use a flexible, time-dependent transmission term. Once the User selects a state, and either one or both viruses, the PROF fitting procedure iteratively determines the joint posterior distribution of model parameters. The joint posterior distribution is then used with the model to generate location-specific probabilistic forecasts of the near-term number of hospital admissions. If both viruses are chosen, this procedure is done twice and the total hospital burden forecast is estimated by combining the trajectory profiles of each disease in multiple ways, including random, ordered, and semi-ordered.","title":"PROF"},{"location":"#data","text":"PROF provides full support for downloading the most up-to-date daily confirmed hospital admission data for COVID-19 and influenza. The data set is provided by the U.S. Department of Health & Human Services, is updated weekly on Friday, and is called: \"COVID-19 Reported Patient Impact and Hospital Capacity by State (RAW)\". For more on the data set, see here .","title":"Data"},{"location":"#compartmental-models","text":"PROF uses compartmental models with a flexible, time-dependent transmission term to fit daily hospitalization data. For both COVID-19 and influenza, the models include a hospitalization compartment which is split into two sub-compartments. This split ensures that the model preserves the correct generation time (T g ) and that the ratio between cumulative recovered and hospitalized individuals is determined by the infection-hospitalization-ratio (p H ). For influenza, individuals begin in the susceptible compartment. If exposed, they transition (\u03b2(t)) to the infectious compartment where there is a probability of hospitalization or recovery (p H /1-p H ) Individuals progress (1/\u03bc) from the first hospitalization compartment (H 1 ) to the second (H 2 ), and the number entering this compartment is recorded as daily incidence (and optimized, see below). A similar model is used for COVID-19 with the only difference being the addition of the Exposed (but not yet infectious) compartment. While we recommend utilizing the SIRH model for influenza and SEIRH for COVID-19, PROF is flexible and supports the fitting of either model to either pathogen.","title":"Compartmental Models"},{"location":"#time-dependent-force-of-infection","text":"We use a smoothly varying two-value functional form to describe the time-dependent reproduction number: R(t) = \u03b2(t)\u03b3, where \u03b2(t) is the time-dependent transmission rate is \u03b3 is the total recovery rate. $$R(t)=\\frac{1}{2}\\left( R_{0} + R_{1} + (R_{1}-R_{0})tanh\\left( \\frac{t-t_{0}}{L} \\right) \\right)$$ The above equation produces a smooth curve where at roughly time t 0 the value of R(t) transitions from R 0 to R 1 with an approximate transition time of ~2L days.","title":"Time-Dependent Force of Infection"},{"location":"#methodology-fitting-forecasting-and-combined-burden","text":"PROF fits each pathogen independently and sequentially. For each pathogen, we determine the joint posterior distribution of model parameters by fitting the daily confirmed hospital admission time series using an adaptive-step-size MCMC procedure. Only parameters that govern the time variation of R(t) and the probability of hospitalization are optimized and all other parameters are taken from the literature. By default, a fast Fortran code is used for the MCMC procedure (in the future, we hope to be able to offer a second, slower-but-faster-than-R, option that does not require a Fortran compiler). Once the fitting of one pathogen is completed, PROF proceeds to fit the second pathogen. The posterior distribution of each fit can be used to (1) Create a probabilistic plot of the fit, (2) Create a probabilistic forecast (and plot thereof) for each pathogen. The final step for PROF is providing an estimate for the forecast of the combined burden. Currently, the combined burden is estimated in two ways (1) By summing the sorted trajectories of each pathogen (implying a perfect correlation between the errors of the two forecasts), or (2) By randomly summing the trajectories (implying no correlation between the errors of the two forecasts). In the near future, we plan to offer a third alternative which is based on an error correlation procedure we are working on.","title":"Methodology - Fitting, Forecasting, and Combined Burden"},{"location":"about/","text":"About the Project The development of PROF is supported by the Council of State and Territorial Epidemiologists (CSTE) and the Centers for Disease Control and Prevention (CDC) through cooperative agreement number NU38OT000297, as part of the \"Development of forecast, analytic, and visualization tools to improve outbreak response and support public health decision-making\" project. References Ben-Nun et al. 2022 Riley et al. 2023 Turtle et al. (2023) - Epidemics, Submitted Contact Michal Ben-Nun : mbennun@predsci.com James Turtle : jturtle@predsci.com Pete Riley : pete@predsci.com","title":"About"},{"location":"about/#about-the-project","text":"The development of PROF is supported by the Council of State and Territorial Epidemiologists (CSTE) and the Centers for Disease Control and Prevention (CDC) through cooperative agreement number NU38OT000297, as part of the \"Development of forecast, analytic, and visualization tools to improve outbreak response and support public health decision-making\" project.","title":"About the Project"},{"location":"about/#references","text":"Ben-Nun et al. 2022 Riley et al. 2023 Turtle et al. (2023) - Epidemics, Submitted","title":"References"},{"location":"about/#contact","text":"Michal Ben-Nun : mbennun@predsci.com James Turtle : jturtle@predsci.com Pete Riley : pete@predsci.com","title":"Contact"},{"location":"install/","text":"PROF Installation Instructions This R package requires an R or RStudio installation and Fortran/GCC compilers. Using 'devtools' in an R console > library(devtools) > install_git(url=\"https://github.com/predsci/PROF\") Cloning through GitHub Users are also welcome to directly download the package either as a zip or by cloning the repository. To clone: git clone https://github.com/predsci/PROF.git Then Open an R or RStudio session. Navigate to the location of the cloned project, open the PROF.Rproj file and install the package.","title":"Install"},{"location":"install/#prof-installation-instructions","text":"This R package requires an R or RStudio installation and Fortran/GCC compilers.","title":"PROF Installation Instructions"},{"location":"install/#using-devtools-in-an-r-console","text":"> library(devtools) > install_git(url=\"https://github.com/predsci/PROF\")","title":"Using 'devtools' in an R console"},{"location":"install/#cloning-through-github","text":"Users are also welcome to directly download the package either as a zip or by cloning the repository. To clone: git clone https://github.com/predsci/PROF.git Then Open an R or RStudio session. Navigate to the location of the cloned project, open the PROF.Rproj file and install the package.","title":"Cloning through GitHub"},{"location":"setup/","text":"Setup We have setup an example.R script and suggest that you give it a try after installing the package. This example has been configured for fitting and forecasting influenza and COVID-19 data for any of the 50 states D.C. and Puerto Rico for either the 2021-2022 or 2022-2023 seasons. All available data is first downloaded and then the data for the requested location is retrieved and processed. You can fit the entire requested season or just part of it. Below we demonstrate both options. All available data for the season is downloaded fitting uses data only until February 15, 2023. You can then compare the forecast to the available data. We start by opening an R or RStudio session and loading the PROF package: > library(PROF) We then use the provided 'hhs_data_ex' function to download the HHS hospitalization file, subset to a state and format the data for both COVID-19 and influenza. We also define the season and the end date for fitting. > prof_data = hhs_data_ex(season = 2022, state=\"CA\", fit_end = as.Date(\"2023-02-15\")) To fit the entire season use: > prof_data = hhs_data_ex(season = 2022, state=\"CA\") To fit the entire 2021-2022 season for Washington state use: > prof_data = hhs_data_ex(season = 2021, state=\"WA\") To fit part of this season to data for the state of Texas use: > prof_data = hhs_data_ex(season = 2021, state=\"TX\", fit_end = as.Date(\"2022-04-15\")) To fit all currently available data for the 2023-24 season for the state of California use: > prof_data = hhs_data_ex(season = 2023, state=\"CA\") When the download is complete we plot the data to the screen: > plot_prof_data(prof_data = prof_data) To save the plot to a file use: > plot_prof_data(prof_data = prof_data, filename = '/path/to/filename') Next we load the parameters for the models (for more details see the R/ex_par_list.R script): > par_list = init_par_list(diseases=c(\"covid19\", \"influenza\"), models=c(\"seirh\", \"sirh\")) The above call tells PROF that we would like to fit SEIRH/SIRH models to the COVID-19/influenza data. To fit an SEIRH model for both COVID-19 and influenza use: > par_list = init_par_list(diseases=c(\"covid19\", \"influenza\"), models=c(\"seirh\", \"seirh\")) We can now sequentially fit both pathogens using the compartmental models we selected: > fit_list <- fit_data(prof_data = prof_data, par_list = par_list) You can now sit and relax for 10-15 minutes To save the results of the fit (posterior distribution and initial state) use: > saveRDS(fit_list, filename = '/path/to/filename.rds') To plot the results of the fit to the screen use: > fit_traj <- plot_fit(prof_data = prof_data, par_list = par_list, fit_list = fit_list) Please note that by default this routine also plots the results of fitting a baseline statistical model to the data. Early in the season this may provide a reasonable fit and forecast. The plotting routine returns a list with the following elements: fit_traj - a list for each disease containing: model fit mechanistic trajectories, dates, and reported incidence stat_traj - a list for each disease containing: baseline statistical trajectories, dates and reported incidence pl - a list of ggplot2 objects one for each disease for the mechanistic plots pl_stat - a list of ggplot2 objects one for each disease for the statistical plots To save the plot to a file use: > fit_traj <- plot_fit(prof_data = prof_data, par_list = par_list, fit_list = fit_list, filename = '/path/to/filename') To use the posterior distributions of the fits to create individual forecasts and a combined burden forecast use: > forecast_traj <- plot_forecast(prof_data = prof_data, par_list = par_list, fit_list = fit_list) Please note that we currently provide two versions of the combined forecast: random (bottom left panel), and ordered (bottom right panel). The plotting routine returns a list with four elements ('covid19', 'influenza', 'random', and 'ordered'). Random and Ordered are the combined burden calculated with random and ordered selection of trajectories, respectively. Each element is a list with the trajectories used to create the plots, the date array and the reported incidence array. To also save the plot to a file use: > forecast_traj <- plot_forecast(prof_data = prof_data, par_list = par_list, fit_list = fit_list, filename = '/path/to/filename') To use the baseline statistical model to create a 42 day forward forecast and the two estimates for the combined burden use: > stat_forecast_list <- plot_stat_forecast(prof_data = prof_data, nfrcst = 42) For both the mechanistic and statistical options the number of forecast horizons is set by the parameter 'nfrcst' above. By default it is set to 35. The cadence (i.e., units) of this parameter are assumed to be the same as the same as that of the incidence data.","title":"Setup"},{"location":"setup/#setup","text":"We have setup an example.R script and suggest that you give it a try after installing the package. This example has been configured for fitting and forecasting influenza and COVID-19 data for any of the 50 states D.C. and Puerto Rico for either the 2021-2022 or 2022-2023 seasons. All available data is first downloaded and then the data for the requested location is retrieved and processed. You can fit the entire requested season or just part of it. Below we demonstrate both options. All available data for the season is downloaded fitting uses data only until February 15, 2023. You can then compare the forecast to the available data. We start by opening an R or RStudio session and loading the PROF package: > library(PROF) We then use the provided 'hhs_data_ex' function to download the HHS hospitalization file, subset to a state and format the data for both COVID-19 and influenza. We also define the season and the end date for fitting. > prof_data = hhs_data_ex(season = 2022, state=\"CA\", fit_end = as.Date(\"2023-02-15\")) To fit the entire season use: > prof_data = hhs_data_ex(season = 2022, state=\"CA\") To fit the entire 2021-2022 season for Washington state use: > prof_data = hhs_data_ex(season = 2021, state=\"WA\") To fit part of this season to data for the state of Texas use: > prof_data = hhs_data_ex(season = 2021, state=\"TX\", fit_end = as.Date(\"2022-04-15\")) To fit all currently available data for the 2023-24 season for the state of California use: > prof_data = hhs_data_ex(season = 2023, state=\"CA\") When the download is complete we plot the data to the screen: > plot_prof_data(prof_data = prof_data) To save the plot to a file use: > plot_prof_data(prof_data = prof_data, filename = '/path/to/filename') Next we load the parameters for the models (for more details see the R/ex_par_list.R script): > par_list = init_par_list(diseases=c(\"covid19\", \"influenza\"), models=c(\"seirh\", \"sirh\")) The above call tells PROF that we would like to fit SEIRH/SIRH models to the COVID-19/influenza data. To fit an SEIRH model for both COVID-19 and influenza use: > par_list = init_par_list(diseases=c(\"covid19\", \"influenza\"), models=c(\"seirh\", \"seirh\")) We can now sequentially fit both pathogens using the compartmental models we selected: > fit_list <- fit_data(prof_data = prof_data, par_list = par_list) You can now sit and relax for 10-15 minutes To save the results of the fit (posterior distribution and initial state) use: > saveRDS(fit_list, filename = '/path/to/filename.rds') To plot the results of the fit to the screen use: > fit_traj <- plot_fit(prof_data = prof_data, par_list = par_list, fit_list = fit_list) Please note that by default this routine also plots the results of fitting a baseline statistical model to the data. Early in the season this may provide a reasonable fit and forecast. The plotting routine returns a list with the following elements: fit_traj - a list for each disease containing: model fit mechanistic trajectories, dates, and reported incidence stat_traj - a list for each disease containing: baseline statistical trajectories, dates and reported incidence pl - a list of ggplot2 objects one for each disease for the mechanistic plots pl_stat - a list of ggplot2 objects one for each disease for the statistical plots To save the plot to a file use: > fit_traj <- plot_fit(prof_data = prof_data, par_list = par_list, fit_list = fit_list, filename = '/path/to/filename') To use the posterior distributions of the fits to create individual forecasts and a combined burden forecast use: > forecast_traj <- plot_forecast(prof_data = prof_data, par_list = par_list, fit_list = fit_list) Please note that we currently provide two versions of the combined forecast: random (bottom left panel), and ordered (bottom right panel). The plotting routine returns a list with four elements ('covid19', 'influenza', 'random', and 'ordered'). Random and Ordered are the combined burden calculated with random and ordered selection of trajectories, respectively. Each element is a list with the trajectories used to create the plots, the date array and the reported incidence array. To also save the plot to a file use: > forecast_traj <- plot_forecast(prof_data = prof_data, par_list = par_list, fit_list = fit_list, filename = '/path/to/filename') To use the baseline statistical model to create a 42 day forward forecast and the two estimates for the combined burden use: > stat_forecast_list <- plot_stat_forecast(prof_data = prof_data, nfrcst = 42) For both the mechanistic and statistical options the number of forecast horizons is set by the parameter 'nfrcst' above. By default it is set to 35. The cadence (i.e., units) of this parameter are assumed to be the same as the same as that of the incidence data.","title":"Setup"}]}