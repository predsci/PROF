{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"PROF A Package for Respiratory Disease Open-source Forecasting Welcome to the documentation site for the PROF package. PROF is an R package (with Fortran code) designed for fitting and forecasting infectious disease incidence. The package takes in publicly-available confirmed hospital admission data, fits mechanistic models to the data, and provides short-term probabilistic forecasts. Currently, the package supports fitting and forecasting the individual and combined burden of influenza and COVID-19 at the state level. Susceptible-Infectious-Hospitalized-Recovered (SIRH) and Susceptible-Exposed-Infectious-Hospitalized-Recovered (SEIRH) models are employed to fit the two pathogens, and both models utilize a flexible, time-dependent transmission term. A baseline statistical model can also be used to fit and forecast each pathogen. In the case of a mechanistic compartmental fitting, once the user selects a state and either one or both viruses, the PROF fitting procedure iteratively determines the joint posterior distribution of model parameters. This joint posterior distribution is then used with the model to generate location-specific probabilistic forecasts of the near-term number of hospital admissions. If both viruses are chosen, this procedure is repeated, and the total hospital burden forecast is estimated by combining the trajectory profiles of each disease in multiple ways, including random, ordered, and semi-ordered. In the case of a baseline statistical model, the user can also select to fit (or forecast) either both pathogens or only one of them. This simple model is fast but its informative value is limited to early/late times in the season when changes in the incidence are small. The PROF computational engine is complemented with a user-friendly GUI. We recommend using the GUI in all cases, except when fitting and forecasting multiple states sequentially. Data PROF provides full support for downloading the most up-to-date daily confirmed hospital admission data for COVID-19 and influenza. Within the PROF-shiny GitHub we provide a recent data set to enable immediate use of the package. If we estimate that there is newer data we provide a download option and prompt the user to use it. The data set is provided by the U.S. Department of Health & Human Services, is updated weekly on Friday, and is called: \"COVID-19 Reported Patient Impact and Hospital Capacity by State (RAW)\". For more on the data set, see here . Compartmental Models PROF uses compartmental models with a flexible, time-dependent transmission term to fit daily hospitalization data. Whereas pathogen can be fitted by either one of the models we support, however we do recommend using the SEIRH model for COVID-19 and the SIRH model for influenza. Both models include a hospitalization compartment which is split into two sub-compartments. This split ensures that the model preserves the correct generation time (T g ) and that the ratio between cumulative recovered and hospitalized individuals is determined by the infection-hospitalization-ratio (p H ). In the SIRH mode, individuals begin in the susceptible compartment. If exposed, they transition (\u03b2(t)) to the infectious compartment where there is a probability of hospitalization or recovery (p H /1-p H ) Individuals progress (1/\u03bc) from the first hospitalization compartment (H 1 ) to the second (H 2 ), and the number entering this compartment is recorded as daily incidence (and optimized, see below). The SEIRH model is similar with the only difference being the addition of the Exposed (but not yet infectious) compartment. While we recommend utilizing the SIRH model for influenza and SEIRH for COVID-19, PROF is flexible and supports the fitting of either model to either pathogen. Time-Dependent Force of Infection We use a smoothly varying two- or three-value functional form to describe the time-dependent reproduction number: R(t) = \u03b2(t)\u03b3, where \u03b2(t) is the time-dependent transmission rate and \u03b3 is the total recovery rate. $$R(t)=\\frac{1}{2}\\left( R_{0} + R_{1} + (R_{1}-R_{0})tanh\\left( \\frac{t-t_{0}}{L} \\right) \\right)$$ The above equation is for the case of a two-value R(t). It produces a smooth curve where at roughly time t 0 the value of R(t) transitions from R 0 to R 1 with an approximate transition time of ~2L days. For the general case of three (or more) values see Ben-Nun et al. 2022 Methodology Fitting, Forecasting, and Combined Burden with a Compartmental Mechanistic Model PROF fits each pathogen independently and sequentially. For each pathogen, we determine the joint posterior distribution of model parameters by fitting the daily confirmed hospital admission time series using an adaptive-step-size MCMC procedure. Only parameters that govern the time variation of R(t) and the probability of hospitalization are optimized and all other parameters are taken from the literature. By default, a fast Fortran code is used for the MCMC procedure. Once the fitting of one pathogen is completed, PROF proceeds to fit the second pathogen. The posterior distribution of each fit can be used to (1) Create a probabilistic plot of the fit, (2) Create a probabilistic forecast (and plot thereof) for each pathogen. The final step for PROF is providing an estimate for the forecast of the combined burden. Currently, the combined burden is estimated in two ways (1) By summing the sorted trajectories of each pathogen (implying a perfect correlation between the errors of the two forecasts), or (2) By randomly summing the trajectories (implying no correlation between the errors of the two forecasts). In the near future, we plan to offer a third alternative which is based on an error correlation procedure we are working on. Baseline Statistical Model In addition to fitting and forecasting the data with a compartmental model PROF can fit and forecast the data to a baseline statistical model. For weekly data, the median prediction of the baseline forecast is the corresponding target value observed in the previous week, and noise around the median prediction is generated using positive and negative 1-week differences (that is differences between consecutive reports) for all prior observations. The resulting sampling distribution is truncated to prevent negative values. PROF implements this model using daily data and uses it to sequentially fit or forecast the data.","title":"Home"},{"location":"#prof-a-package-for-respiratory-disease-open-source-forecasting","text":"Welcome to the documentation site for the PROF package. PROF is an R package (with Fortran code) designed for fitting and forecasting infectious disease incidence. The package takes in publicly-available confirmed hospital admission data, fits mechanistic models to the data, and provides short-term probabilistic forecasts. Currently, the package supports fitting and forecasting the individual and combined burden of influenza and COVID-19 at the state level. Susceptible-Infectious-Hospitalized-Recovered (SIRH) and Susceptible-Exposed-Infectious-Hospitalized-Recovered (SEIRH) models are employed to fit the two pathogens, and both models utilize a flexible, time-dependent transmission term. A baseline statistical model can also be used to fit and forecast each pathogen. In the case of a mechanistic compartmental fitting, once the user selects a state and either one or both viruses, the PROF fitting procedure iteratively determines the joint posterior distribution of model parameters. This joint posterior distribution is then used with the model to generate location-specific probabilistic forecasts of the near-term number of hospital admissions. If both viruses are chosen, this procedure is repeated, and the total hospital burden forecast is estimated by combining the trajectory profiles of each disease in multiple ways, including random, ordered, and semi-ordered. In the case of a baseline statistical model, the user can also select to fit (or forecast) either both pathogens or only one of them. This simple model is fast but its informative value is limited to early/late times in the season when changes in the incidence are small. The PROF computational engine is complemented with a user-friendly GUI. We recommend using the GUI in all cases, except when fitting and forecasting multiple states sequentially.","title":"PROF A Package for Respiratory Disease Open-source Forecasting"},{"location":"#data","text":"PROF provides full support for downloading the most up-to-date daily confirmed hospital admission data for COVID-19 and influenza. Within the PROF-shiny GitHub we provide a recent data set to enable immediate use of the package. If we estimate that there is newer data we provide a download option and prompt the user to use it. The data set is provided by the U.S. Department of Health & Human Services, is updated weekly on Friday, and is called: \"COVID-19 Reported Patient Impact and Hospital Capacity by State (RAW)\". For more on the data set, see here .","title":"Data"},{"location":"#compartmental-models","text":"PROF uses compartmental models with a flexible, time-dependent transmission term to fit daily hospitalization data. Whereas pathogen can be fitted by either one of the models we support, however we do recommend using the SEIRH model for COVID-19 and the SIRH model for influenza. Both models include a hospitalization compartment which is split into two sub-compartments. This split ensures that the model preserves the correct generation time (T g ) and that the ratio between cumulative recovered and hospitalized individuals is determined by the infection-hospitalization-ratio (p H ). In the SIRH mode, individuals begin in the susceptible compartment. If exposed, they transition (\u03b2(t)) to the infectious compartment where there is a probability of hospitalization or recovery (p H /1-p H ) Individuals progress (1/\u03bc) from the first hospitalization compartment (H 1 ) to the second (H 2 ), and the number entering this compartment is recorded as daily incidence (and optimized, see below). The SEIRH model is similar with the only difference being the addition of the Exposed (but not yet infectious) compartment. While we recommend utilizing the SIRH model for influenza and SEIRH for COVID-19, PROF is flexible and supports the fitting of either model to either pathogen.","title":"Compartmental Models"},{"location":"#time-dependent-force-of-infection","text":"We use a smoothly varying two- or three-value functional form to describe the time-dependent reproduction number: R(t) = \u03b2(t)\u03b3, where \u03b2(t) is the time-dependent transmission rate and \u03b3 is the total recovery rate. $$R(t)=\\frac{1}{2}\\left( R_{0} + R_{1} + (R_{1}-R_{0})tanh\\left( \\frac{t-t_{0}}{L} \\right) \\right)$$ The above equation is for the case of a two-value R(t). It produces a smooth curve where at roughly time t 0 the value of R(t) transitions from R 0 to R 1 with an approximate transition time of ~2L days. For the general case of three (or more) values see Ben-Nun et al. 2022","title":"Time-Dependent Force of Infection"},{"location":"#methodology","text":"","title":"Methodology"},{"location":"#fitting-forecasting-and-combined-burden-with-a-compartmental-mechanistic-model","text":"PROF fits each pathogen independently and sequentially. For each pathogen, we determine the joint posterior distribution of model parameters by fitting the daily confirmed hospital admission time series using an adaptive-step-size MCMC procedure. Only parameters that govern the time variation of R(t) and the probability of hospitalization are optimized and all other parameters are taken from the literature. By default, a fast Fortran code is used for the MCMC procedure. Once the fitting of one pathogen is completed, PROF proceeds to fit the second pathogen. The posterior distribution of each fit can be used to (1) Create a probabilistic plot of the fit, (2) Create a probabilistic forecast (and plot thereof) for each pathogen. The final step for PROF is providing an estimate for the forecast of the combined burden. Currently, the combined burden is estimated in two ways (1) By summing the sorted trajectories of each pathogen (implying a perfect correlation between the errors of the two forecasts), or (2) By randomly summing the trajectories (implying no correlation between the errors of the two forecasts). In the near future, we plan to offer a third alternative which is based on an error correlation procedure we are working on.","title":"Fitting, Forecasting, and Combined Burden with a Compartmental Mechanistic Model"},{"location":"#baseline-statistical-model","text":"In addition to fitting and forecasting the data with a compartmental model PROF can fit and forecast the data to a baseline statistical model. For weekly data, the median prediction of the baseline forecast is the corresponding target value observed in the previous week, and noise around the median prediction is generated using positive and negative 1-week differences (that is differences between consecutive reports) for all prior observations. The resulting sampling distribution is truncated to prevent negative values. PROF implements this model using daily data and uses it to sequentially fit or forecast the data.","title":"Baseline Statistical Model"},{"location":"about/","text":"About the Project The development of PROF is supported by the Council of State and Territorial Epidemiologists (CSTE) and the Centers for Disease Control and Prevention (CDC) through cooperative agreement number NU38OT000297, as part of the \"Development of forecast, analytic, and visualization tools to improve outbreak response and support public health decision-making\" project. References Ben-Nun et al. 2022 Riley et al. 2023 Turtle et al. (2023) - Epidemics, Accepted Contact Michal Ben-Nun : mbennun@predsci.com James Turtle : jturtle@predsci.com Pete Riley : pete@predsci.com","title":"About"},{"location":"about/#about-the-project","text":"The development of PROF is supported by the Council of State and Territorial Epidemiologists (CSTE) and the Centers for Disease Control and Prevention (CDC) through cooperative agreement number NU38OT000297, as part of the \"Development of forecast, analytic, and visualization tools to improve outbreak response and support public health decision-making\" project.","title":"About the Project"},{"location":"about/#references","text":"Ben-Nun et al. 2022 Riley et al. 2023 Turtle et al. (2023) - Epidemics, Accepted","title":"References"},{"location":"about/#contact","text":"Michal Ben-Nun : mbennun@predsci.com James Turtle : jturtle@predsci.com Pete Riley : pete@predsci.com","title":"Contact"},{"location":"advanced/","text":"PROF Advanced Topics The observed time-series data for both COVID-19 and influenza can be rather intricate, even within a single season. For instance, during the 2023-2024 season, many states (such as CA, FL, GA) experienced two distinct waves of COVID-19. Similarly, influenza can exhibit a dual wave attributed to different strains, e.g. influenza A and B. Whereas the PROF mechanistic framework includes only a single strain for each pathogen it does attempt to fit and forecast these complex time-series by employing a flexible time-dependent term for the force of infection. PROF uses a smoothly varying two- or three-value functional form to describe the time-dependent reproduction number, R(t) = \u03b2(t)\u03b3 where \u03b2(t) is the time-dependent transmision rate and \u03b3 is the total recovery rate. The first advanced topic we discuss is the choice of number of values for R(t), two vs. three. We illustrate this with the 2023-2024 COVID-19 time-series data for CA. We note that the example we show is somewhat extreme and not typical. It shows how a two-value fit to the data fails whereas the three-value fit is quite good. In general, we recommend starting with a two-value model and trying the three-value model only if the two-value one fails. Selecting the number of values for R(t) Suppose that we are trying to fit the CA COVID-19 time-series for 2023-2024 from July 1st, 2023 to December 31, 2023 (dashed vertical line in the figure below): the data shows a peak in the late summer/fall and the start of winter wave. We start by selecting the SEIRH model, the two-value option for the force of infection and start and end dates of July 1, 2023 and December 2023, respectively. These choices are shown in the figure below. The results of this fit are poor. In the figure below black circles are reported data and shaded areas are the median, 50% and 95% confidence intervals. We see that the two value model is unable to fit the early peak and winter rise and is settling into a single broad peak. Clearly this fit would result in a poor forecast. Given these poor results we will now repeat the fit with a three-value model and the results of this fit are shown below. We see that the more flexible three-value model improves the fit significantly although even this fit is not perfect: the rise in the second wave in the model is slower than the observed data. We note that as the season progresses the fit with a two-value force of infection improves and is able to fit the two peaks: using one value for each peak (see below). This example demonstrates the complexity of the fits and our somewhat limited ability to control the convergence of the optimization procedure. As discussed below, our 'control knobs' are limited to the minimum and maximum values we explore in the search for optimal parameters. To conclude, this example demonstrates the need to experiment with the mechanistic models. We suggest starting with a two-value force of infection and if the results are not-satisfactory to try and repeat the fit with a three value model. If no improvement is achieved with three values you can try to improve the results by changing the default values for the initial guess of the fitted parameters and their allowed ranges. This requires more knowledge in R and is discussed below. Uploading Your Own Data Editing the Parameter File The fit and forecast generating functions of PROF contain default parameter values that are pathogen specific. However, the user may customize these parameters by altering the parameter list structure. The customized parameter specification can then be saved to a YAML file for later use/reference. PROF provides two methods for initializing a parameter list structure: Use PROF::init_par_list(). Here is an example for working with a single disease (COVID-19), using an SEIR model to produce hospitalizations. R library(PROF) # to generate the parameter structure for a single disease par_list1 = init_par_list(diseases=c(\"covid19\"), models=c(\"seirh\")) str(par_list1) Here is a second example for working with two diseases (COVID-19, Influenza), using an SEIR model for COVID-19 hospitalizations and SIR for influenza. R # generate a multi-disease parameter structure par_list2 = init_par_list(diseases=c(\"covid19\", \"influenza\"), models=c(\"seirh\", \"sirh\")) str(par_list2) Use the YAML template located in the 'parameters' directory of PROF: PROF/parameters/param_exmpl.yml The YAML file can be copied and customized using a text editor, or by loading into R: R par_list = PROF::read_par_list_yaml(file_path=\".../PROF/parameters/param_exmpl.yml\") The parameter list is initialized with almost all values assigned NAs. Any disease parameter whose value remains NA when passed to PROF will have its value set by PROF::init_param(). Manually setting a parameter is straightforward. For example to set the influenza generation-time to 3.5 days: par_list$influenza$dis_par_ranges$par$gamma = 1/3.5 Explain initial conditions estimated by PROF::est_I0(). Explain which parameters can be/are optimized. Explain parameter ranges. Describe each parameter: initial, disease, mcmc...? When changes are complete (if editing the list in R), the parameter list can be saved to YAML format for future reference: PROF::write_par_list_yaml(par_list=par_list, file_path=\"my_dir/test.yml\") Inferring Mortality","title":"PROF-Advanced Topics"},{"location":"advanced/#prof-advanced-topics","text":"The observed time-series data for both COVID-19 and influenza can be rather intricate, even within a single season. For instance, during the 2023-2024 season, many states (such as CA, FL, GA) experienced two distinct waves of COVID-19. Similarly, influenza can exhibit a dual wave attributed to different strains, e.g. influenza A and B. Whereas the PROF mechanistic framework includes only a single strain for each pathogen it does attempt to fit and forecast these complex time-series by employing a flexible time-dependent term for the force of infection. PROF uses a smoothly varying two- or three-value functional form to describe the time-dependent reproduction number, R(t) = \u03b2(t)\u03b3 where \u03b2(t) is the time-dependent transmision rate and \u03b3 is the total recovery rate. The first advanced topic we discuss is the choice of number of values for R(t), two vs. three. We illustrate this with the 2023-2024 COVID-19 time-series data for CA. We note that the example we show is somewhat extreme and not typical. It shows how a two-value fit to the data fails whereas the three-value fit is quite good. In general, we recommend starting with a two-value model and trying the three-value model only if the two-value one fails.","title":"PROF Advanced Topics"},{"location":"advanced/#selecting-the-number-of-values-for-rt","text":"Suppose that we are trying to fit the CA COVID-19 time-series for 2023-2024 from July 1st, 2023 to December 31, 2023 (dashed vertical line in the figure below): the data shows a peak in the late summer/fall and the start of winter wave. We start by selecting the SEIRH model, the two-value option for the force of infection and start and end dates of July 1, 2023 and December 2023, respectively. These choices are shown in the figure below. The results of this fit are poor. In the figure below black circles are reported data and shaded areas are the median, 50% and 95% confidence intervals. We see that the two value model is unable to fit the early peak and winter rise and is settling into a single broad peak. Clearly this fit would result in a poor forecast. Given these poor results we will now repeat the fit with a three-value model and the results of this fit are shown below. We see that the more flexible three-value model improves the fit significantly although even this fit is not perfect: the rise in the second wave in the model is slower than the observed data. We note that as the season progresses the fit with a two-value force of infection improves and is able to fit the two peaks: using one value for each peak (see below). This example demonstrates the complexity of the fits and our somewhat limited ability to control the convergence of the optimization procedure. As discussed below, our 'control knobs' are limited to the minimum and maximum values we explore in the search for optimal parameters. To conclude, this example demonstrates the need to experiment with the mechanistic models. We suggest starting with a two-value force of infection and if the results are not-satisfactory to try and repeat the fit with a three value model. If no improvement is achieved with three values you can try to improve the results by changing the default values for the initial guess of the fitted parameters and their allowed ranges. This requires more knowledge in R and is discussed below.","title":"Selecting the number of values for R(t)"},{"location":"advanced/#uploading-your-own-data","text":"","title":"Uploading Your Own Data"},{"location":"advanced/#editing-the-parameter-file","text":"The fit and forecast generating functions of PROF contain default parameter values that are pathogen specific. However, the user may customize these parameters by altering the parameter list structure. The customized parameter specification can then be saved to a YAML file for later use/reference. PROF provides two methods for initializing a parameter list structure: Use PROF::init_par_list(). Here is an example for working with a single disease (COVID-19), using an SEIR model to produce hospitalizations. R library(PROF) # to generate the parameter structure for a single disease par_list1 = init_par_list(diseases=c(\"covid19\"), models=c(\"seirh\")) str(par_list1) Here is a second example for working with two diseases (COVID-19, Influenza), using an SEIR model for COVID-19 hospitalizations and SIR for influenza. R # generate a multi-disease parameter structure par_list2 = init_par_list(diseases=c(\"covid19\", \"influenza\"), models=c(\"seirh\", \"sirh\")) str(par_list2) Use the YAML template located in the 'parameters' directory of PROF: PROF/parameters/param_exmpl.yml The YAML file can be copied and customized using a text editor, or by loading into R: R par_list = PROF::read_par_list_yaml(file_path=\".../PROF/parameters/param_exmpl.yml\") The parameter list is initialized with almost all values assigned NAs. Any disease parameter whose value remains NA when passed to PROF will have its value set by PROF::init_param(). Manually setting a parameter is straightforward. For example to set the influenza generation-time to 3.5 days: par_list$influenza$dis_par_ranges$par$gamma = 1/3.5 Explain initial conditions estimated by PROF::est_I0(). Explain which parameters can be/are optimized. Explain parameter ranges. Describe each parameter: initial, disease, mcmc...? When changes are complete (if editing the list in R), the parameter list can be saved to YAML format for future reference: PROF::write_par_list_yaml(par_list=par_list, file_path=\"my_dir/test.yml\")","title":"Editing the Parameter File"},{"location":"advanced/#inferring-mortality","text":"","title":"Inferring Mortality"},{"location":"example/","text":"Setup We have setup an example.R script and suggest that you give it a try if you would like to learn to use PROF without its shiny GUI. This example has been configured for fitting and forecasting influenza and COVID-19 data for any of the 50 states D.C. and Puerto Rico for the 2021-22, 2022-23, or 2023-24 seasons. All available data is first downloaded and then the data for the requested location is retrieved and processed. You can fit the entire requested season or just part of it. Below we demonstrate both options. We start by opening an R or Rstudio session and loading the PROF package: > library(PROF) We then download the HHS data using the provided 'hhs_hosp_state_down' function > result = hhs_hosp_state_down(down_dir=\"\\~/Downloads\") We can check to see if the download was successful: > result\\$out_flag The above should be zero. We now select a state and a season > state = \"CA\" > season = 2023 and extract the data: > prof_data = hhs_2_PROF(hhs_path=result\\$download_path, season = season, state=state) You can select other states or any of the two previous seasons (2021 and 2022). The 'prof_data' data structure should now be available and the data can be plotted to the screen: > plot_prof_data(prof_data = prof_data) Plots can also be saved to a file using: > plot_prof_data(prof_data = prof_data, filename = '/path/to/filename') Next we will add 'fit data' structure to each pathogen - this is the data that will be fitted using a mechanistic compartmental model. NULL values for start/end dates mean set to start/end of the season data, and fit all available data: prof_data = hhs_set_fitdates(prof_data=prof_data, fit_start=NULL, fit_end=NULL) To fit only part of the data use for example: prof_data = hhs_set_fitdates(prof_data=prof_data, fit_start=NULL, fit_end=\"2023-10-28\") You can also change the start date of the fit for each pathogen, for example: prof_data = hhs_set_fitdates(prof_data=prof_data, fit_start=c(\"2023-10-01\",NULL), fit_end=\"2023-10-28\") will change the start fit for COVID-19 to October 1, 2023 but keep the start date for influenza to its default (start of the season) value. Similarly, prof_data = hhs_set_fitdates(prof_data=prof_data, fit_start=c(NULL, \"2023-10-01\"), fit_end=\"2023-10-28\") will keep the default start date for COVID-19 and change it for influenza. If you would like to fit only part of the data we recommend using the interactive plots of the data for selecting the ''fit_start' dates and 'fit_end' date. Please note that whereas each pathogen has its own 'fit_start' date, the end date for the fitting is always the same for both pathogen. Next we load the parameters for the models (for more details see the R/ex_par_list.R script): > par_list = init_par_list(diseases=c(\"covid19\", \"influenza\"), models=c(\"seirh\", \"sirh\")) The above call tells PROF that we would like to fit SEIRH/SIRH models to the COVID-19/influenza data. To fit an SEIRH model for both COVID-19 and influenza use: > par_list = init_par_list(diseases=c(\"covid19\", \"influenza\"), models=c(\"seirh\", \"seirh\")) We can now sequentially fit both pathogens using the compartmental models we selected: > fit_list \\<- fit_data(prof_data = prof_data, par_list = par_list) You can now sit and relax for 10-15 minutes To save the results of the fit (posterior distribution and initial state) use: > saveRDS(fit_list, filename = '/path/to/filename.rds') To plot the results of the fit to the screen use: > fit_traj \\<- plot_fit(prof_data = prof_data, par_list = par_list, fit_list = fit_list) The plotting routine returns a list with the following elements: fit_traj - a list for each disease containing: model fit mechanistic trajectories, dates, and reported incidence pl - a list of ggplot2 objects one for each disease for the mechanistic plots To save the plot to a file use: > fit_traj \\<- plot_fit(prof_data = prof_data, par_list = par_list, fit_list = fit_list, filename = '/path/to/filename') Please note that by default this routine also plots the results of fitting a baseline statistical model to the data. Early in the season this may provide a reasonable fit and forecast. To plot the results of fitting a baseline statistical mode to each pathogen use: > stat_fit_list \\<- plot_stat_fit(prof_data = prof_data) The above call returns a list with the following elements: stat_fit_traj - a list for each disease containing: baseline statistical fit trajectories, dates, and reported incidence pl_stat - a list of ggplot2 objects one for each disease for the statistical plots To use the posterior distributions of the fits to create individual forecasts and a combined burden forecast use: > forecast_traj \\<- plot_forecast(prof_data = prof_data, par_list = par_list, fit_list = fit_list) Please note that we currently provide two versions of the combined forecast: random (bottom left panel), and sorted (bottom right panel). The plotting routine returns a list with four elements ('covid19', 'influenza', 'random', and 'sorted'). Random and Sorted are the combined burden calculated with random and sorted selection of trajectories, respectively. Each element is a list with the trajectories used to create the plots, the date array and the reported incidence array. To also save the plot to a file use: > forecast_traj \\<- plot_forecast(prof_data = prof_data, par_list = par_list, fit_list = fit_list, filename = '/path/to/filename') PROF can also be used to fit and forecast using a fast baseline statistical model. The procedure follows the steps we have taken for the compartmental mechanistic model. First, we add 'fit-stat data' structure to each pathogen - this is the data that will be fitted using a baseline statistical model. NULL values for start/end dates mean set to start/end of the season data, and fit all available data: > prof_data = hhs_set_fitdates_stat(prof_data=prof_data, fit_start=c(NULL,NULL), fit_end=NULL) Note that here too the start date for fitting can be different for each pathogen but the end date for fitting is the same. To fit and plot the results we use: > stat_fit_list \\<- plot_stat_fit(prof_data = prof_data, ntarj = 2e4, filename = NULL) Here we have set the number of trajectories to 2,000 (default is 1,000). To save the plots to a file use: > stat_fit_list \\<- plot_stat_fit(prof_data = prof_data, ntarj = 1e4, filename = 'path/to/filename') To use the baseline statistical model to create a 28 day forward forecast and the two estimates for the combined burden use: >> stat_forecast_list \\<- plot_stat_forecast(prof_data = prof_data, nfrcst = 28) For the combined burden of the baseline statistical model we offer the same two options (random and sorted). The statistical plotting routine returns a list with the same four elements as the one for the mechanistic forecasts For both the mechanistic and statistical options the number of forecast horizons is set by the parameter 'nfrcst' above. By default it is set to 28. The cadence (i.e., units) of this parameter are assumed to be the same as that of the incidence data. For both the mechanistic and statistical models you can fit and forecast a single pathogen. If for example you would like to only fit the 'covid19' data you should follow these steps: Load an initial guess for the parameters and set the model only for 'covid19' > par_list = init_par_list(diseases=c(\"covid19\"), models=c(\"seirh\")) Fit only the covid19 data using: > fit_list \\<- fit_data(prof_data = prof_data['covid19'], par_list = par_list) Plot the single pathogen fit results: > fit_traj \\<- plot_fit(prof_data = prof_data['covid19'], par_list = par_list, fit_list = fit_list) Use the posterior distribution of the single pathogen fit to perform and plot the forecast: > forecast_traj \\<- plot_forecast(prof_data = prof_data['covid19'], par_list = par_list, fit_list = fit_list) Since only one pathogen was modeled there is no estimate for a combined burden. To plot the results of fitting a baseline statistical model only to covid19 use: > stat_fit_list \\<- plot_stat_fit(prof_data = prof_data['covid19']) And for the forecast: > stat_forecast_list \\<- plot_stat_forecast(prof_data = prof_data['covid19'], nfrcst = 28) To fit and forecast only influenza use the same logic in all the calls shown above replacing 'covid19' with 'influenza' and using an 'sirh' compartmental model.","title":"PROF Command Line Example"},{"location":"example/#setup","text":"We have setup an example.R script and suggest that you give it a try if you would like to learn to use PROF without its shiny GUI. This example has been configured for fitting and forecasting influenza and COVID-19 data for any of the 50 states D.C. and Puerto Rico for the 2021-22, 2022-23, or 2023-24 seasons. All available data is first downloaded and then the data for the requested location is retrieved and processed. You can fit the entire requested season or just part of it. Below we demonstrate both options. We start by opening an R or Rstudio session and loading the PROF package: > library(PROF) We then download the HHS data using the provided 'hhs_hosp_state_down' function > result = hhs_hosp_state_down(down_dir=\"\\~/Downloads\") We can check to see if the download was successful: > result\\$out_flag The above should be zero. We now select a state and a season > state = \"CA\" > season = 2023 and extract the data: > prof_data = hhs_2_PROF(hhs_path=result\\$download_path, season = season, state=state) You can select other states or any of the two previous seasons (2021 and 2022). The 'prof_data' data structure should now be available and the data can be plotted to the screen: > plot_prof_data(prof_data = prof_data) Plots can also be saved to a file using: > plot_prof_data(prof_data = prof_data, filename = '/path/to/filename') Next we will add 'fit data' structure to each pathogen - this is the data that will be fitted using a mechanistic compartmental model. NULL values for start/end dates mean set to start/end of the season data, and fit all available data: prof_data = hhs_set_fitdates(prof_data=prof_data, fit_start=NULL, fit_end=NULL) To fit only part of the data use for example: prof_data = hhs_set_fitdates(prof_data=prof_data, fit_start=NULL, fit_end=\"2023-10-28\") You can also change the start date of the fit for each pathogen, for example: prof_data = hhs_set_fitdates(prof_data=prof_data, fit_start=c(\"2023-10-01\",NULL), fit_end=\"2023-10-28\") will change the start fit for COVID-19 to October 1, 2023 but keep the start date for influenza to its default (start of the season) value. Similarly, prof_data = hhs_set_fitdates(prof_data=prof_data, fit_start=c(NULL, \"2023-10-01\"), fit_end=\"2023-10-28\") will keep the default start date for COVID-19 and change it for influenza. If you would like to fit only part of the data we recommend using the interactive plots of the data for selecting the ''fit_start' dates and 'fit_end' date. Please note that whereas each pathogen has its own 'fit_start' date, the end date for the fitting is always the same for both pathogen. Next we load the parameters for the models (for more details see the R/ex_par_list.R script): > par_list = init_par_list(diseases=c(\"covid19\", \"influenza\"), models=c(\"seirh\", \"sirh\")) The above call tells PROF that we would like to fit SEIRH/SIRH models to the COVID-19/influenza data. To fit an SEIRH model for both COVID-19 and influenza use: > par_list = init_par_list(diseases=c(\"covid19\", \"influenza\"), models=c(\"seirh\", \"seirh\")) We can now sequentially fit both pathogens using the compartmental models we selected: > fit_list \\<- fit_data(prof_data = prof_data, par_list = par_list) You can now sit and relax for 10-15 minutes To save the results of the fit (posterior distribution and initial state) use: > saveRDS(fit_list, filename = '/path/to/filename.rds') To plot the results of the fit to the screen use: > fit_traj \\<- plot_fit(prof_data = prof_data, par_list = par_list, fit_list = fit_list) The plotting routine returns a list with the following elements: fit_traj - a list for each disease containing: model fit mechanistic trajectories, dates, and reported incidence pl - a list of ggplot2 objects one for each disease for the mechanistic plots To save the plot to a file use: > fit_traj \\<- plot_fit(prof_data = prof_data, par_list = par_list, fit_list = fit_list, filename = '/path/to/filename') Please note that by default this routine also plots the results of fitting a baseline statistical model to the data. Early in the season this may provide a reasonable fit and forecast. To plot the results of fitting a baseline statistical mode to each pathogen use: > stat_fit_list \\<- plot_stat_fit(prof_data = prof_data) The above call returns a list with the following elements: stat_fit_traj - a list for each disease containing: baseline statistical fit trajectories, dates, and reported incidence pl_stat - a list of ggplot2 objects one for each disease for the statistical plots To use the posterior distributions of the fits to create individual forecasts and a combined burden forecast use: > forecast_traj \\<- plot_forecast(prof_data = prof_data, par_list = par_list, fit_list = fit_list) Please note that we currently provide two versions of the combined forecast: random (bottom left panel), and sorted (bottom right panel). The plotting routine returns a list with four elements ('covid19', 'influenza', 'random', and 'sorted'). Random and Sorted are the combined burden calculated with random and sorted selection of trajectories, respectively. Each element is a list with the trajectories used to create the plots, the date array and the reported incidence array. To also save the plot to a file use: > forecast_traj \\<- plot_forecast(prof_data = prof_data, par_list = par_list, fit_list = fit_list, filename = '/path/to/filename') PROF can also be used to fit and forecast using a fast baseline statistical model. The procedure follows the steps we have taken for the compartmental mechanistic model. First, we add 'fit-stat data' structure to each pathogen - this is the data that will be fitted using a baseline statistical model. NULL values for start/end dates mean set to start/end of the season data, and fit all available data: > prof_data = hhs_set_fitdates_stat(prof_data=prof_data, fit_start=c(NULL,NULL), fit_end=NULL) Note that here too the start date for fitting can be different for each pathogen but the end date for fitting is the same. To fit and plot the results we use: > stat_fit_list \\<- plot_stat_fit(prof_data = prof_data, ntarj = 2e4, filename = NULL) Here we have set the number of trajectories to 2,000 (default is 1,000). To save the plots to a file use: > stat_fit_list \\<- plot_stat_fit(prof_data = prof_data, ntarj = 1e4, filename = 'path/to/filename') To use the baseline statistical model to create a 28 day forward forecast and the two estimates for the combined burden use: >> stat_forecast_list \\<- plot_stat_forecast(prof_data = prof_data, nfrcst = 28) For the combined burden of the baseline statistical model we offer the same two options (random and sorted). The statistical plotting routine returns a list with the same four elements as the one for the mechanistic forecasts For both the mechanistic and statistical options the number of forecast horizons is set by the parameter 'nfrcst' above. By default it is set to 28. The cadence (i.e., units) of this parameter are assumed to be the same as that of the incidence data. For both the mechanistic and statistical models you can fit and forecast a single pathogen. If for example you would like to only fit the 'covid19' data you should follow these steps: Load an initial guess for the parameters and set the model only for 'covid19' > par_list = init_par_list(diseases=c(\"covid19\"), models=c(\"seirh\")) Fit only the covid19 data using: > fit_list \\<- fit_data(prof_data = prof_data['covid19'], par_list = par_list) Plot the single pathogen fit results: > fit_traj \\<- plot_fit(prof_data = prof_data['covid19'], par_list = par_list, fit_list = fit_list) Use the posterior distribution of the single pathogen fit to perform and plot the forecast: > forecast_traj \\<- plot_forecast(prof_data = prof_data['covid19'], par_list = par_list, fit_list = fit_list) Since only one pathogen was modeled there is no estimate for a combined burden. To plot the results of fitting a baseline statistical model only to covid19 use: > stat_fit_list \\<- plot_stat_fit(prof_data = prof_data['covid19']) And for the forecast: > stat_forecast_list \\<- plot_stat_forecast(prof_data = prof_data['covid19'], nfrcst = 28) To fit and forecast only influenza use the same logic in all the calls shown above replacing 'covid19' with 'influenza' and using an 'sirh' compartmental model.","title":"Setup"},{"location":"install/","text":"PROF Installation Instructions This R package requires an R or Rstudio installation and Fortran/GCC compilers. We strongly recommend using the package with its user friends Shiny-app GUI (see below). Using 'devtools' in an R console > library(devtools)\\ > install_git(url=\" https://github.com/predsci/PROF \") Cloning through GitHub Users are also welcome to directly download the package either as a zip or by cloning the repository. To clone: git clone https://github.com/predsci/PROF.git Then Open an R or Rstudio session. Navigate to the location of the cloned project, open the PROF.Rproj file and install the package. Shiny-app PROF installation After successfully installing the PROF package please proceed to clone the GUI for it: git clone https://github.com/predsci/PROF-shiny-app.git To launch the GUI open the ui.R file within PRO-shiny-app","title":"Install"},{"location":"install/#prof-installation-instructions","text":"This R package requires an R or Rstudio installation and Fortran/GCC compilers. We strongly recommend using the package with its user friends Shiny-app GUI (see below).","title":"PROF Installation Instructions"},{"location":"install/#using-devtools-in-an-r-console","text":"> library(devtools)\\ > install_git(url=\" https://github.com/predsci/PROF \")","title":"Using 'devtools' in an R console"},{"location":"install/#cloning-through-github","text":"Users are also welcome to directly download the package either as a zip or by cloning the repository. To clone: git clone https://github.com/predsci/PROF.git Then Open an R or Rstudio session. Navigate to the location of the cloned project, open the PROF.Rproj file and install the package.","title":"Cloning through GitHub"},{"location":"install/#shiny-app-prof-installation","text":"After successfully installing the PROF package please proceed to clone the GUI for it: git clone https://github.com/predsci/PROF-shiny-app.git To launch the GUI open the ui.R file within PRO-shiny-app","title":"Shiny-app PROF installation"},{"location":"tutorial/","text":"PROF Tutorial This tutorial is configured assuming an Rstudio session with the PROF-Shiny-app GUI. It assumes that PROF has been successfully installed and that the PROF-shiny-app has been cloned. Opening the App We will start by opening an Rstudio session and opening the PROF shiny app. To open the app open the ui.R file downloaded when you cloned the shiny-app and click on the green Run App icon. At this stage R may install packages that are required by the shiny-app but once this is completed a shiny window will open with the landing page of the application You can continue to work in the shiny window or select to open it in a browser. The landing page provides links to all our documentation and repositories (bottom left) and is the gateway to the Incidence page. 1. Explore Incidence To proceed to the Explore Incidence Tab you can either click on the cartoon data image or click on the tab itself. Here, the two dropdown menus allow you to select a location and a season. (We support all seasons covered by the HHS dataset.) Before you make your selection please read the message about the local PROF-Shiny data file. If the message indicates that the datafile is up-to-date there is no need for any action but if it indicates that there may be newer data we recommend that you update the data file using the Download button. Once you have read the message, and acted if recommended, proceed to make your selections for a location and a season and press the Plot Incidence Data button. Two plots will appear showing daily new hospital admission for COVID-19 and Influenza (top and bottom plots, respectively). As you hover over each plot, you can inspect specific dates/values. Each plot can be saved as a png file using the camera icon and the data associated with the plots can be saved by clicking the Save Incidence Data button. To view another location and/or season make your new selections and press the Plot Incidence Data button. The current plots will be greyed-out while the new request is processed. Once you are satisfied with your selections for location and season you can proceed the Tab number 2, Fit Incidence . 2. Fit Incidence Fitting will always be done on the currently selected location and season. You can select to fit the data with a mechanistic compartmental model and/or a baseline statistical model. The latter fit is basically instantaneous whereas the mechanistic fit(s) will take 5-10 minutes (depending on the details of the fit and your computer). Mechanistic Fit In the case of a Mechanistic fit you must first decide which pathogens you want to fit. Once you click on a pathogen you are prompted to define the model. This includes selecting a compartmental model (SEIRH or SIRH), the number of values for the time-dependent force of infection (FOI) and the start date for the fit. We recommend using the SEIHR/SIRH models for COVID-19/Influenza respectively. The choice of the number of values for the FOI depends on the complexity of the time-series you are fitting. As a rule-of-thumb, we recommend using the 3-value option only if the time series exhibits more than one peak. In all other cases we recommend using the 2-value option. Note that the complexity of the time-series may depend on your selection for the start-date for the fit. By default, this date is set for both pathogens to the start of the season but you can change that. When fitting both pathogens, the start date for the fit does not need to be the same for both pathogens but the end date must be. By default the end date is set to the last date with reported data but you can modify that to an earlier date. If you do that, then at the forecasting step you will be able to compare the forecast to the observations. The Figure below shows an example of the shiny window when all the selections have been made Once you have made all your selections you can press the Mechanistic Fit to Incidence button. A message will appear indicating that the fitting has started and will take 5-10 minutes. You can follow the progress of the fitting in the console window of your Shiny session. When the fitting is complete either one or two plots will appear showing the results of the fit along with the data. We show the median, 50 and 95 confidence intervals. As in the case of the incidence plots here too you can click on the camera icon to save each plot and on the Save Plots Data button to download the plots data as a csv file. An example of fit plots you should see if you selected to fit both pathogens is shown below. Please note that while the mechanistic fit is in progress you can not execute any other command in the Shiny app. When the fitting is complete you can proceed to either the Statistical option for fitting or to Tab 3: Create Forecast . Statistical Fit The simple baseline statistical model is designed to reproduce all the data points and create an uncertainty based on day-to-day (or week-to-week) variations in the data. Here we only ask the User to select which pathogen(s) they would like to fit, what is the start date for each fit and what is the end date for the fit(s). Here too we support individual start dates but require the same end date. When you have made your selections press the Statistical Fit to Incidence Button and after a few seconds one or two plots will appear (based on the number of pathogens you selected to fit). As always, you can click on the camera icon to save each plot and on the Save Plots Data button to download the plots data as a csv file. 3. Forecast Incidence Forecasting will always be done on the currently selected location, season, pathogens and models. Mechanistic Forecast The mechanistic forecast is based on the posterior distribution of the parameters coming out of the fit. This means that only pathogens that you selected for a mechanistic fit can be forecasted. We ask the User to make either one or two selections depending on the scenario. If only one pathogen was fitted, the User only needs to select the number of days for the forecast. By default, this value is set to 28 days, and users can adjust it using the slider. If both pathogens were fitted, we ask the User to also specify the value of the error-correlation parameter. This parameter determines the combination of uncertainties present in the individual forecasts. Its default value is one, indicating full correlation between individual errors and resulting in greater uncertainty. Users can modify this default value using the slider. It's important to note that, regardless of the User's selection, PROF will always generate an estimate of the combined burden with an error-correlation value of zero. Once you made you selection(s) press the Mechanistic Forecast button. The plots will appear after less than a minute. The top left/right plots show the forecast for COVID-19/Influenza (median, 50 and 95 confidence intervals). The bottom plot shows our estimate for the combined burden calculated either with an error-correlation value of zero (right panel) and using our selection value of 0.7 for the error-correlation parameter. Here too, you can save the plots as a png file and download the data as a csv file. Please remember that the combined burden plots will appear only if you selected to fit and forecast both pathogens. Statistical Forecast Here we use the baseline statistical model for the forecast with all other details being the same as in the Mechanistic Forecast tab. An example of output plots for a statistical forecast is shown below. In this example, we've set the error-correlation parameter to 0.8, as indicated in the legend of the bottom-left panel. The bottom-right panel displays the estimated combined burden, assuming that the errors of the two forecasts are entirely independent. As explained before, the error-correlation parameter governs the width of the combined forecast, with higher values leading to a wider forecast. Selecting the Error-Correlation when Combining Forecasts When forecasting both pathogens, we can combine the individual forecasts to provide an estimate of the combined burden. Given that each forecast carries its own uncertainty, the method of combining these uncertainties is currently an active area of research. Two limits are intuitively clear: no correlation between the errors of the individual forecasts or full correlation among the individual errors. At PSI we have developed a procedure for tuning this correlation using a single parameter that adjusts the combination of uncertainties present in the individual forecasts. A value of one indicates full correlation among the individual errors, leading to greater uncertainty in the combined forecast. Conversely, a value of zero suggests errors that are entirely independent, resulting in a narrower forecast. PROF provides a slider for selecting the value of this parameter (which is set by default to one). The Figure below shows this slider for the case of a statistical forecast. An identical slider is available on the Mechanistic tab. (This slider will appear only if both pathogens were forecasted.) We recommend starting with the default value of one and examining the resulting uncertainty of the combined burden. You can then lower this value and observe how the uncertainty of the combined burden decreases. Note that if one pathogen significantly outweighs the summed uncertainty magnitude, the specific value you select has little effect. In addition to your selection of the error correlation value, PROF will always estimate the combined burden using an error correlation value of zero. The two estimates of the combined burden appear in the bottom panels below, with the left panel showing an error correlation of 0.5 and the right panel showing an error correlation of zero. A close inspection reveals that, as expected, the uncertainty of the combined estimate with an error correlation value of 0.5 is greater than that with a value of zero. Finally, we note that for retrospective studies (see below), we only estimate the accuracy of individual forecasts, which are not affected by changes in the uncertainty of the combined forecast. 4. Evaluating Forecasts By default, PROF is configured to fit the entirety of the data stream, and the forecast time-window begins a day (or a week) after the last data point. Assessing the forecast accuracy is not feasible in this scenario (due to lack of data). However, the User has the option to fit and forecast data from previous seasons or to fit a portion of the current season's data stream. In either of these scenarios, the forecast can be compared to reported observations, and the accuracy of the forecast can be evaluated. PROF uses the weighted interval score as implemented in the scoringutils R package to assess the accuracy of its probabilistic forecasts. Smaller values of WIS indicate forecasts that are more aligned with observations. The evaluation of the WIS uses the data and forecasts cadence and the same quantiles as mandated by the FluSight Challenge . To evaluate a forecast you must select an end date for the fitting that precedes the end date of the data stream. This is done at the 2. Fit Incidence stage. The end date is set independently for the Mechanistic and Statistical Models. For example, if the data stream ends on 02-24-2024 and you would like to evaluate a 28 day forward forecast you should set the end-date for the fit to be 28 days prior to 02-24-2024, i.e., 01-27-2024. A snapshot of such a selection for the Statistical Model is shown below. If you plan to also run a mechanistic model we recommend setting the same end date for it so that the accuracy of both models can be evaluated for the same forecast horizon. Once the fitting process is completed, for either one or two models and for either one or two pathogens you can proceed to the 3. Create Forecast tab. You can create a forecast for each pathogen/model combination you fitted. Your only selection is for the number of days in the forecast horizon with the default being 28 days. Since the forecast step is fast we recommend doing it for all pathogens/models you fitted. The plot below shows the results of a 28 day forward mechanistic forecast. Based on our selections, there are 28 days of data in the forecast time-window, and we will assess the accuracy of the forecasts for these 28 days. Since we utilized both mechanistic and statistical models to fit both pathogens, we can evaluate the accuracy of both models for each pathogen, as illustrated in the figure below. The top and bottom panels in this figure depict the WIS score of the mechanistic (red) and statistical (blue) models for the COVID-19 and Influenza forecasts, respectively. With lower scores indicating better performance, we observe that the mechanistic forecast outperformed the statistical forecast for nearly all days in the case of COVID-19, while for Influenza, it significantly outperformed the statistical forecast for ALL days. If you are using PROF from the command line, the script below provides a step-by-step example of fitting/forecasting and evaluating a forecast using the WIS score Download the example WIS score script About Tab The About tab provides background information about PROF as well as an Acknowledgement and a link to our web documentation. For questions/comments/suggestions/bugs please email us at: Michal Ben-Nun : mbennun\\@predsci.com James Turtle : jturtle\\@predsci.com Pete Riley : pete\\@predsci.com","title":"PROF-Shiny Tutorial"},{"location":"tutorial/#prof-tutorial","text":"This tutorial is configured assuming an Rstudio session with the PROF-Shiny-app GUI. It assumes that PROF has been successfully installed and that the PROF-shiny-app has been cloned.","title":"PROF Tutorial"},{"location":"tutorial/#opening-the-app","text":"We will start by opening an Rstudio session and opening the PROF shiny app. To open the app open the ui.R file downloaded when you cloned the shiny-app and click on the green Run App icon. At this stage R may install packages that are required by the shiny-app but once this is completed a shiny window will open with the landing page of the application You can continue to work in the shiny window or select to open it in a browser. The landing page provides links to all our documentation and repositories (bottom left) and is the gateway to the Incidence page.","title":"Opening the App"},{"location":"tutorial/#1-explore-incidence","text":"To proceed to the Explore Incidence Tab you can either click on the cartoon data image or click on the tab itself. Here, the two dropdown menus allow you to select a location and a season. (We support all seasons covered by the HHS dataset.) Before you make your selection please read the message about the local PROF-Shiny data file. If the message indicates that the datafile is up-to-date there is no need for any action but if it indicates that there may be newer data we recommend that you update the data file using the Download button. Once you have read the message, and acted if recommended, proceed to make your selections for a location and a season and press the Plot Incidence Data button. Two plots will appear showing daily new hospital admission for COVID-19 and Influenza (top and bottom plots, respectively). As you hover over each plot, you can inspect specific dates/values. Each plot can be saved as a png file using the camera icon and the data associated with the plots can be saved by clicking the Save Incidence Data button. To view another location and/or season make your new selections and press the Plot Incidence Data button. The current plots will be greyed-out while the new request is processed. Once you are satisfied with your selections for location and season you can proceed the Tab number 2, Fit Incidence .","title":"1. Explore Incidence"},{"location":"tutorial/#2-fit-incidence","text":"Fitting will always be done on the currently selected location and season. You can select to fit the data with a mechanistic compartmental model and/or a baseline statistical model. The latter fit is basically instantaneous whereas the mechanistic fit(s) will take 5-10 minutes (depending on the details of the fit and your computer).","title":"2. Fit Incidence"},{"location":"tutorial/#mechanistic-fit","text":"In the case of a Mechanistic fit you must first decide which pathogens you want to fit. Once you click on a pathogen you are prompted to define the model. This includes selecting a compartmental model (SEIRH or SIRH), the number of values for the time-dependent force of infection (FOI) and the start date for the fit. We recommend using the SEIHR/SIRH models for COVID-19/Influenza respectively. The choice of the number of values for the FOI depends on the complexity of the time-series you are fitting. As a rule-of-thumb, we recommend using the 3-value option only if the time series exhibits more than one peak. In all other cases we recommend using the 2-value option. Note that the complexity of the time-series may depend on your selection for the start-date for the fit. By default, this date is set for both pathogens to the start of the season but you can change that. When fitting both pathogens, the start date for the fit does not need to be the same for both pathogens but the end date must be. By default the end date is set to the last date with reported data but you can modify that to an earlier date. If you do that, then at the forecasting step you will be able to compare the forecast to the observations. The Figure below shows an example of the shiny window when all the selections have been made Once you have made all your selections you can press the Mechanistic Fit to Incidence button. A message will appear indicating that the fitting has started and will take 5-10 minutes. You can follow the progress of the fitting in the console window of your Shiny session. When the fitting is complete either one or two plots will appear showing the results of the fit along with the data. We show the median, 50 and 95 confidence intervals. As in the case of the incidence plots here too you can click on the camera icon to save each plot and on the Save Plots Data button to download the plots data as a csv file. An example of fit plots you should see if you selected to fit both pathogens is shown below. Please note that while the mechanistic fit is in progress you can not execute any other command in the Shiny app. When the fitting is complete you can proceed to either the Statistical option for fitting or to Tab 3: Create Forecast .","title":"Mechanistic Fit"},{"location":"tutorial/#statistical-fit","text":"The simple baseline statistical model is designed to reproduce all the data points and create an uncertainty based on day-to-day (or week-to-week) variations in the data. Here we only ask the User to select which pathogen(s) they would like to fit, what is the start date for each fit and what is the end date for the fit(s). Here too we support individual start dates but require the same end date. When you have made your selections press the Statistical Fit to Incidence Button and after a few seconds one or two plots will appear (based on the number of pathogens you selected to fit). As always, you can click on the camera icon to save each plot and on the Save Plots Data button to download the plots data as a csv file.","title":"Statistical Fit"},{"location":"tutorial/#3-forecast-incidence","text":"Forecasting will always be done on the currently selected location, season, pathogens and models.","title":"3. Forecast Incidence"},{"location":"tutorial/#mechanistic-forecast","text":"The mechanistic forecast is based on the posterior distribution of the parameters coming out of the fit. This means that only pathogens that you selected for a mechanistic fit can be forecasted. We ask the User to make either one or two selections depending on the scenario. If only one pathogen was fitted, the User only needs to select the number of days for the forecast. By default, this value is set to 28 days, and users can adjust it using the slider. If both pathogens were fitted, we ask the User to also specify the value of the error-correlation parameter. This parameter determines the combination of uncertainties present in the individual forecasts. Its default value is one, indicating full correlation between individual errors and resulting in greater uncertainty. Users can modify this default value using the slider. It's important to note that, regardless of the User's selection, PROF will always generate an estimate of the combined burden with an error-correlation value of zero. Once you made you selection(s) press the Mechanistic Forecast button. The plots will appear after less than a minute. The top left/right plots show the forecast for COVID-19/Influenza (median, 50 and 95 confidence intervals). The bottom plot shows our estimate for the combined burden calculated either with an error-correlation value of zero (right panel) and using our selection value of 0.7 for the error-correlation parameter. Here too, you can save the plots as a png file and download the data as a csv file. Please remember that the combined burden plots will appear only if you selected to fit and forecast both pathogens.","title":"Mechanistic Forecast"},{"location":"tutorial/#statistical-forecast","text":"Here we use the baseline statistical model for the forecast with all other details being the same as in the Mechanistic Forecast tab. An example of output plots for a statistical forecast is shown below. In this example, we've set the error-correlation parameter to 0.8, as indicated in the legend of the bottom-left panel. The bottom-right panel displays the estimated combined burden, assuming that the errors of the two forecasts are entirely independent. As explained before, the error-correlation parameter governs the width of the combined forecast, with higher values leading to a wider forecast.","title":"Statistical Forecast"},{"location":"tutorial/#selecting-the-error-correlation-when-combining-forecasts","text":"When forecasting both pathogens, we can combine the individual forecasts to provide an estimate of the combined burden. Given that each forecast carries its own uncertainty, the method of combining these uncertainties is currently an active area of research. Two limits are intuitively clear: no correlation between the errors of the individual forecasts or full correlation among the individual errors. At PSI we have developed a procedure for tuning this correlation using a single parameter that adjusts the combination of uncertainties present in the individual forecasts. A value of one indicates full correlation among the individual errors, leading to greater uncertainty in the combined forecast. Conversely, a value of zero suggests errors that are entirely independent, resulting in a narrower forecast. PROF provides a slider for selecting the value of this parameter (which is set by default to one). The Figure below shows this slider for the case of a statistical forecast. An identical slider is available on the Mechanistic tab. (This slider will appear only if both pathogens were forecasted.) We recommend starting with the default value of one and examining the resulting uncertainty of the combined burden. You can then lower this value and observe how the uncertainty of the combined burden decreases. Note that if one pathogen significantly outweighs the summed uncertainty magnitude, the specific value you select has little effect. In addition to your selection of the error correlation value, PROF will always estimate the combined burden using an error correlation value of zero. The two estimates of the combined burden appear in the bottom panels below, with the left panel showing an error correlation of 0.5 and the right panel showing an error correlation of zero. A close inspection reveals that, as expected, the uncertainty of the combined estimate with an error correlation value of 0.5 is greater than that with a value of zero. Finally, we note that for retrospective studies (see below), we only estimate the accuracy of individual forecasts, which are not affected by changes in the uncertainty of the combined forecast.","title":"Selecting the Error-Correlation when Combining Forecasts"},{"location":"tutorial/#4-evaluating-forecasts","text":"By default, PROF is configured to fit the entirety of the data stream, and the forecast time-window begins a day (or a week) after the last data point. Assessing the forecast accuracy is not feasible in this scenario (due to lack of data). However, the User has the option to fit and forecast data from previous seasons or to fit a portion of the current season's data stream. In either of these scenarios, the forecast can be compared to reported observations, and the accuracy of the forecast can be evaluated. PROF uses the weighted interval score as implemented in the scoringutils R package to assess the accuracy of its probabilistic forecasts. Smaller values of WIS indicate forecasts that are more aligned with observations. The evaluation of the WIS uses the data and forecasts cadence and the same quantiles as mandated by the FluSight Challenge . To evaluate a forecast you must select an end date for the fitting that precedes the end date of the data stream. This is done at the 2. Fit Incidence stage. The end date is set independently for the Mechanistic and Statistical Models. For example, if the data stream ends on 02-24-2024 and you would like to evaluate a 28 day forward forecast you should set the end-date for the fit to be 28 days prior to 02-24-2024, i.e., 01-27-2024. A snapshot of such a selection for the Statistical Model is shown below. If you plan to also run a mechanistic model we recommend setting the same end date for it so that the accuracy of both models can be evaluated for the same forecast horizon. Once the fitting process is completed, for either one or two models and for either one or two pathogens you can proceed to the 3. Create Forecast tab. You can create a forecast for each pathogen/model combination you fitted. Your only selection is for the number of days in the forecast horizon with the default being 28 days. Since the forecast step is fast we recommend doing it for all pathogens/models you fitted. The plot below shows the results of a 28 day forward mechanistic forecast. Based on our selections, there are 28 days of data in the forecast time-window, and we will assess the accuracy of the forecasts for these 28 days. Since we utilized both mechanistic and statistical models to fit both pathogens, we can evaluate the accuracy of both models for each pathogen, as illustrated in the figure below. The top and bottom panels in this figure depict the WIS score of the mechanistic (red) and statistical (blue) models for the COVID-19 and Influenza forecasts, respectively. With lower scores indicating better performance, we observe that the mechanistic forecast outperformed the statistical forecast for nearly all days in the case of COVID-19, while for Influenza, it significantly outperformed the statistical forecast for ALL days. If you are using PROF from the command line, the script below provides a step-by-step example of fitting/forecasting and evaluating a forecast using the WIS score Download the example WIS score script","title":"4. Evaluating Forecasts"},{"location":"tutorial/#about-tab","text":"The About tab provides background information about PROF as well as an Acknowledgement and a link to our web documentation. For questions/comments/suggestions/bugs please email us at: Michal Ben-Nun : mbennun\\@predsci.com James Turtle : jturtle\\@predsci.com Pete Riley : pete\\@predsci.com","title":"About Tab"}]}